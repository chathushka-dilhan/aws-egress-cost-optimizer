# This Terraform module sets up the necessary AWS resources for a machine learning platform
# including SageMaker, S3, IAM roles, and a development notebook instance.

# --- Amazon SageMaker Notebook Instance (for development/experimentation) ---
# This is optional for production but highly recommended for model development.
resource "aws_sagemaker_notebook_instance" "dev_notebook" {
  name          = "${var.project_name}-dev-notebook"
  role_arn      = var.sagemaker_iam_role_arn
  instance_type = "ml.t3.medium" # Small instance for development
  lifecycle_config_name = aws_sagemaker_notebook_instance_lifecycle_configuration.on_create_config.name

  tags = {
    Name        = "${var.project_name}-dev-notebook"
    Environment = var.environment_tag
    Owner       = var.owner_tag
  }
}

# Lifecycle configuration to install libraries or setup environment on notebook creation
resource "aws_sagemaker_notebook_instance_lifecycle_configuration" "on_create_config" {
  name = "${var.project_name}-on-create-config"

  on_create = <<EOF
#!/bin/bash
set -ex
# Example: Install Python packages
pip install pandas scikit-learn boto3
# Example: Clone a Git repository
# git clone https://github.com/your-repo/ml-scripts.git /home/ec2-user/SageMaker/ml-scripts
EOF
}

# --- SageMaker Model Package Group (for model versioning) ---
# Allows you to version and manage your trained models.
resource "aws_sagemaker_model_package_group" "anomaly_detector_mpg" {
  model_package_group_name = "${var.project_name}-anomaly-detector-mpg"
  model_package_group_description = "Model Package Group for Egress Cost Anomaly Detector"

  tags = {
    Name        = "${var.project_name}-anomaly-detector-mpg"
    Environment = var.environment_tag
    Owner       = var.owner_tag
  }
}

# --- SageMaker Model (Placeholder) ---
# This resource defines the ML model itself, pointing to the model artifacts in S3.
# The actual model artifact (.tar.gz) is generated by a SageMaker training job (not directly in Terraform).
# We'll use a placeholder for now, assuming a Random Cut Forest (RCF) model.
resource "aws_sagemaker_model" "anomaly_detector_model" {
  name               = var.sagemaker_model_name
  execution_role_arn = var.sagemaker_iam_role_arn

  primary_container {
    # For built-in algorithms like RCF, you specify the ECR image provided by SageMaker
    image = "433757028032.dkr.ecr.${var.aws_region}.amazonaws.com/randomcutforest:latest" # RCF built-in algorithm
    # You would typically specify the S3 location of your model artifacts here
    model_data_url = "${var.s3_model_artifacts_bucket_arn}/anomaly_detection/model.tar.gz" # Update with actual model artifact path
  }

  tags = {
    Name        = "${var.project_name}-anomaly-detector-model"
    Environment = var.environment_tag
    Owner       = var.owner_tag
  }
}

# --- SageMaker Endpoint Configuration ---
# Defines the instance types and count for the SageMaker endpoint.
resource "aws_sagemaker_endpoint_configuration" "anomaly_detector_ep_config" {
  name_prefix = "${var.project_name}-anomaly-detector-ep-config"

  production_variants {
    variant_name           = "AllTraffic"
    model_name             = aws_sagemaker_model.anomaly_detector_model.name
    initial_instance_count = 1
    instance_type          = var.sagemaker_instance_type_inference
    initial_variant_weight = 1.0
  }

  tags = {
    Name        = "${var.project_name}-anomaly-detector-ep-config"
    Environment = var.environment_tag
    Owner       = var.owner_tag
  }
}

# --- SageMaker Endpoint ---
# Deploys the SageMaker model as a real-time inference endpoint.
resource "aws_sagemaker_endpoint" "anomaly_detector_endpoint" {
  name                 = var.sagemaker_endpoint_name
  endpoint_config_name = aws_sagemaker_endpoint_configuration.anomaly_detector_ep_config.name

  tags = {
    Name        = "${var.project_name}-anomaly-detector-endpoint"
    Environment = var.environment_tag
    Owner       = var.owner_tag
  }
}